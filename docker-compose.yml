version: '3.9'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nestjs_app
    ports:
      - "3000:3000"
    environment:
      DATABASE_URL: ${DOCKER_DATABASE_URL}
    depends_on:
      - db
      - redis
    volumes:
      - .:/app
      - /app/node_modules

  db:
    image: postgres:15
    container_name: postgres_db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
#      - ./scripts/init.template.sql:/docker-entrypoint-initdb.d/init.template.sql
#    entrypoint: bash -c "envsubst < /docker-entrypoint-initdb.d/init.template.sql > /docker-entrypoint-initdb.d/init.sql && docker-entrypoint.sh postgres"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "dzencode"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    command: redis-server --save 60 1 --loglevel warning
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  redis_data:
